# 3: Feature Request: Table capacities should be flexible
======================
You should be able to specify a min/max capacity, as well as an optimal 
capacity, for a table (or a specific grouping). For example, you should
be able to tell the program, "Table 4 seats 9-12 people, and it's in a 
prime location so I'd like to get all 12 seats filled."

# 2: Tables should be allowed to have a 'capacity' without 'days'
=======================
Actually, I guess you could already do this (there would just be 1 day
named 'Capacity'). Need to make this compatible with import_people (b/c
the people import won't have a day named 'Capacity').

# 1: Write Output Files
=======================
Enable writing output files using export_people and possibly export_tables.
This will require:
- Updating the data structures for people and/or tables so output data is 
stored in dicts for csv.DictWriter to write
- writing the export_people and export_tables functions
- 


# Testing Situations
===========================
Testing with a variety of input documents:
	- no categories, 1 day: no days or categories in people file, no 
	  days in tables file (simplest case - just a list of people and 
	  a list of tables)
	- categories, 1 day
	- no categories, multiple days
	- categories, multiple days
	  	      ** sure there are subcases here **
	  - various field name combos ('First Name' and 'Last Name', 'Name' 
	    only, etc.)
	  - 1 day, more people than seats

Bad Files
---------
	- @ least 1 reqd field missing from ppl
	- @ least 1 reqd field missing from tables

Next step: make test_camper_utils.py

I am thinking about how to store tables, groups, and campers so
I can easily access them and so I can keep track of which ones have
been used or not.

Right now I have tables_master, a dictionary which keeps track of
what tables exist (format: { '2' : <table-object>, 'Head' : <table-object> etc. })

I think that this concept could be useful for keeping master lists of campers
(master dict of campers by id) and groupings (master list of groupings by
table name & date? Or maybe a dict of dicts?)

It could also be useful for keeping track of campers/tables/groupings on
a day-by-day basis. You could have dicts like Monday-tables, Monday-campers,
etc. that only contain tables/campers/groupings (?) not yet assigned.
If you have to de-assign a camper/group b/c it's not optimal, you
put it back into that dict. All of the dicts always exist (maybe they're
stored in a master dict?) so you always have some sort of record of
state on that day. You might want to do more with that, though. I guess
that between those dicts and your output data structure you have a full
record of state at each point.
